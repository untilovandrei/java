----------------------------------------------------------------------------------------------------------
-------------------------------------------------------------------------------
------------------------------------------------------
	Configuration class - tha class which contains the declaration of Java beans
------------------------------------------------------
-------------------------------------------------------------------------------
----------------------------------------------------------------------------------------------------------

package com.tutorialspoint;
import org.springframework.context.annotation.*;

@Configuration
public class HelloWorldConfig {
   @Bean 
   @Scope("prototype")    //  default value is @Scope("singleton")
   public HelloWorld helloWorld(){
      return new HelloWorld();
   }
}

1. by default , method Annotated with "@Bean" -  method name is used as bean id (in this case id = "helloWorld")
2. to specify the bean name use :
	@Bean("helloWorld")

----------------------------------------------------------------------------------------------------------
-------------------------------------------------------------------------------
------------------------------------------------------
	Bean class - tha class which describes an entity
------------------------------------------------------
-------------------------------------------------------------------------------
----------------------------------------------------------------------------------------------------------


package com.tutorialspoint;

public class HelloWorld {
   private String message;

   public void setMessage(String message){
      this.message  = message;
   }
   public void getMessage(){
      System.out.println("Your Message : " + message);
   }
}



----------------------------------------------------------------------------------------------------------
-------------------------------------------------------------------------------
------------------------------------------------------
	Launcher class - tha class which initializes beans
------------------------------------------------------
-------------------------------------------------------------------------------
----------------------------------------------------------------------------------------------------------


public class MainApp {
   public static void main(String[] args) {

      ApplicationContext ctx = new AnnotationConfigApplicationContext(HelloWorldConfig.class);
   
      HelloWorld helloWorld = ctx.getBean(HelloWorld.class);  
      helloWorld.setMessage("Hello World!");
      helloWorld.getMessage();
   }
}

1.	It is allowed to add new config classes to ApplicationContext

	ctx.register(AppConfig.class, OtherConfig.class);
   	ctx.register(AdditionalConfig.class);
   	ctx.refresh();

2.	HelloWorld helloWorld = ctx.getBean(HelloWorld.class);    ==    HelloWorld helloWorld = ctx.getBean("helloWorld"); // get bean by id



------------------------------------
------------------
Annotation configuration
------------------
------------------------------------
1.    @EnableAutoConfiguration - makes Spring Boot create many beans automatically, relying on the dependencies in pom.xml file

2.    @SpringBootApplication - just a combination of three annotations:  
               - @Configuration                 (it's a config class)
               - @EnableAutoConfiguration       (initialize beans based on .pom dependencies)
               - @ComponentScan                 (scans the package in which is located the class and it's subpackages).


3     @SpringBootApplication           (same as above but it's specified the package to scan.)
      @ComponentScan(basePackages = "com.baeldung.componentscan.springbootapp.animals") 
